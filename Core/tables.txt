drop table bagagem;
drop table assento;
drop table check_in;
drop table bilhete;
drop table viagem;
drop table passagens;
drop table classe;
drop table aviao;
drop table aeroporto;
drop table car_cli;
drop table clientes;
drop table cartao_credito;
drop table bandeira;
drop table endereco;
drop table papel_func;
drop table funcionalidade;
drop table perfil;
DROP TABLE usuarios;
DROP TABLE papel;
DROP TABLE Dep_pass; 
DROP TABLE Departamento;

CREATE TABLE aeroporto(
aero_id SERIAL PRIMARY KEY,
sigla VARCHAR(50),
nome VARCHAR(50),
lat numeric(10,6),
lng numeric(10,6)
);

CREATE TABLE classe(
class_id SERIAL PRIMARY KEY,
peso numeric(10,5),
class_nome VARCHAR(50)
);

create table aviao(
avi_id SERIAL PRIMARY KEY,
avi_nome VARCHAR(50),
marca VARCHAR(50),
serie VARCHAR(50),
lugares int
);

CREATE TABLE passagens(
pass_id SERIAL PRIMARY KEY,
pass_lo_chegada int,
pass_lo_partida int,
qtd int,
avi_id int,
class_id int,
data_partida timestamp,
data_chegada timestamp,
CONSTRAINT FK_aviao FOREIGN KEY (avi_id) REFERENCES aviao(avi_id),
CONSTRAINT FK_class FOREIGN KEY (class_id) REFERENCES classe(class_id),
CONSTRAINT FK_aero_che FOREIGN KEY (pass_lo_chegada) REFERENCES aeroporto(aero_id),
CONSTRAINT FK_aero_par FOREIGN KEY (pass_lo_partida) REFERENCES aeroporto(aero_id)
);



CREATE TABLE viagem
(
viagem_id SERIAL PRIMARY KEY,
qtd int,
preco_unit numeric(10,5),
pass_id int,
class_id int,
CONSTRAINT FK_voo FOREIGN KEY (pass_id) REFERENCES passagens(pass_id),
CONSTRAINT FK_class FOREIGN KEY (class_id) REFERENCES Classe(class_id)
);
CREATE TABLE bilhete
(
bilhete_id SERIAL PRIMARY KEY,
nome varchar(50),
rg varchar(50),
cpf varchar(50),
email varchar(50),
sexo boolean,
passaporte varchar(50),
viagem_id int,
CONSTRAINT FK_class FOREIGN KEY (viagem_id) REFERENCES viagem(viagem_id)
);
CREATE TABLE check_in(
chck_in_id SERIAL PRIMARY KEY,
viagem_id int,
bilhete_id  int,
CONSTRAINT FK_aviao FOREIGN KEY (viagem_id) REFERENCES viagem(viagem_id),
CONSTRAINT FK_bilhete FOREIGN KEY (bilhete_id) REFERENCES bilhete(bilhete_id)
);

CREATE TABLE bagagem
(
bagagem_id SERIAL PRIMARY KEY,
comprimento numeric(10,5),
largura numeric(10,5),
altura numeric(10,5),
peso numeric(10,5),
chck_in_id int,
CONSTRAINT FK_Dono FOREIGN KEY (chck_in_id) REFERENCES check_in(chck_in_id) on delete cascade on update cascade
);
CREATE TABLE assento(
assento_id SERIAL PRIMARY KEY,
tag varchar(40),
chck_in_id int,
pass_id int,
class_id int,
CONSTRAINT FK_ocupante FOREIGN KEY (chck_in_id) REFERENCES check_in(chck_in_id) on delete cascade on update cascade,
CONSTRAINT FK_classe FOREIGN KEY (class_id) REFERENCES classe(class_id),
CONSTRAINT FK_voo FOREIGN KEY (pass_id) REFERENCES passagens(pass_id)
);

create table papel
(
id_papel Serial PRIMARY key,
descricao varchar(30)
);

create table funcionalidade
(
id_func Serial PRIMARY key,
descricao varchar(30)
);

create table papel_func
(
id_func int ,
id_papel int,
CONSTRAINT funcionalidade FOREIGN KEY(id_func) REFERENCES funcionalidade(id_func)on delete cascade,
CONSTRAINT fk_papel FOREIGN KEY(id_papel) REFERENCES papel(id_papel)on delete cascade,
CONSTRAINT pk_papel_func PRIMARY KEY(id_papel,id_func)
);

create table usuarios
(
id_user serial PRIMARY KEY, 
login varchar(100) unique,
password_user varchar(80)
);


create table perfil(
id_perfil serial PRIMARY KEY,
id_papel int,
id_user int,
CONSTRAINT usuario FOREIGN KEY(id_user) REFERENCES usuarios(id_user),
CONSTRAINT papel FOREIGN KEY(id_papel) REFERENCES papel(id_papel)
);

CREATE TABLE bandeira
(
    id_band     serial PRIMARY KEY,
    nome_band VARCHAR(50)
);

CREATE TABLE cartao_credito
(
    id_car serial PRIMARY KEY,
    numero VARCHAR(20),
    ccv int ,    
    nome_car VARCHAR(50),
    validade  VARCHAR(9),
    id_band int,
    CONSTRAINT fk_bandeira FOREIGN KEY (id_band) REFERENCES bandeira(id_band)
);

CREATE TABLE endereco
(   
    id_end serial primary key,
    numero VARCHAR(4),
    logradouro VARCHAR(200),
    bairro   VARCHAR(50),
    cidade   VARCHAR(50),
    complemento VARCHAR(35),
    cep      CHAR(8),
    uf       CHAR(2) 
);

CREATE TABLE clientes
(
    id_cli     Serial PRIMARY KEY,
    --ative     CHAR(1),
    id_user int,
    id_end int,    
    nome_cli VARCHAR(50),
    sexo     CHAR(1),
    cpf      CHAR(11),
    rg       VARCHAR(9),
    dt_nas   DATE,
    CONSTRAINT fk_usu_cli FOREIGN KEY(id_user) REFERENCES usuarios(id_user)  on delete cascade on update cascade,
    CONSTRAINT fk_end_cli FOREIGN KEY(id_end) REFERENCES endereco(id_end)  on delete cascade on update cascade
);

CREATE TABLE car_cli
(
    id_cli     int,   
    id_car   int,
    CONSTRAINT fk_car_cli FOREIGN KEY(id_cli) REFERENCES clientes(id_cli)  on delete cascade on update cascade,
    CONSTRAINT fk_cli_car FOREIGN KEY(id_car) REFERENCES cartao_credito(id_car)  on delete cascade on update cascade,
    constraint PK_CC primary key (id_cli, id_car)
);

CREATE TABLE Departamento
(
    id_dep   serial primary key,   
    nome   varchar(60)
); 

CREATE TABLE dep_pass
(
    id_dep     int,   
    pass_id   int,
    CONSTRAINT fk_dep_pass FOREIGN KEY(id_dep) REFERENCES Departamento(id_dep)  on delete cascade on update cascade,
    CONSTRAINT fk_pass_dep FOREIGN KEY(pass_id) REFERENCES passagens(pass_id)  on delete cascade on update cascade,
    constraint PK_CC primary key (id_cli, id_car)
);

CREATE TABLE status
(
    id_status   serial primary key,
    bilhete_id     int,   
    atual   int,
    prox   int,
    CONSTRAINT fk_st_at FOREIGN KEY (atual) REFERENCES Departamento(id_dep)  on delete cascade on update cascade,
    CONSTRAINT fk_st_px FOREIGN KEY (prox) REFERENCES Departamento(id_dep)  on delete cascade on update cascade,
    CONSTRAINT fk_st_bilhete FOREIGN KEY (bilhete_id) REFERENCES Departamento(bilhete_id)  on delete cascade on update cascade,
    constraint PK_CC primary key (id_cli, id_car)
);