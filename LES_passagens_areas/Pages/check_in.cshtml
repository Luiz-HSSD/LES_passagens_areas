@page
@model LES_passagens_areas.Pages.check_inModel
@{
    ViewData["Title"] = "check_in";
}

@if (!string.IsNullOrEmpty(Model.message) && Model.message!="sucesso!\n")
{
    <p id="dii" style="display:none; visibility:hidden;">@Html.Raw(Model.message)</p>
    <script>alert(document.getElementById("dii").innerHTML);</script>
}
<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/lib/datatables.min.css">
<script type="text/javascript" src="~/lib/datatables.min.js"></script><!---->
<script src="~/js/jquery.mask.min.js"></script>
<h2>check-in</h2>

@{
    //if (Model.bilhete == null || Model.classe == null)
    {
        Model.aeroporto = new SelectList(new List<SelectListItem>(), "Value", "Text");
        Model.voo = new SelectList(new List<SelectListItem>(), "Value", "Text");
        Model.bilhete = new SelectList(new List<SelectListItem>(), "Value", "Text");
        Model.classe = new SelectList(Model.GetRoles1(), "Value", "Text");
        Model.assento = new SelectList(new List<string>());

    }
}
<form method="POST">
    ID: @Html.TextBox("id", (Model.id), new { @readonly = "readonly" })<br />
    aeroporto: @Html.DropDownList("aeroporto", Model.aeroporto) <br />
    voo: @Html.DropDownList("voo", Model.voo) id: <input id="queen" oninput="under_pressure(document.getElementById('queen').value , 'a');" />  nome: <input id="aerosmith" oninput="under_pressure('0' , document.getElementById('aerosmith').value);" />  <br />
    Bilhete: @Html.DropDownList("bilhete", Model.bilhete) (nome rg) ou ((nome id) caso busca id ou nome)<br />
    <table id="tb_vieww">
        <thead>
            <tr><th></th><th>id ou indice caso não cadastrado</th><th>dimensões</th><th>peso</th></tr>
        </thead>
        <tbody>
            @foreach (Dominio.Bagagem objUser in Model.GetRoles3())
            {
                <tr>
                    <td>
                        <a class="btn btn-danger" href='check_in?dele=@objUser.ID.ToString()'>apagar</a>
                    </td>
                    <td>@objUser.ID.ToString()</td>
                    <td>C @objUser.comprimento.ToString() X L @objUser.largura.ToString() X A @objUser.altura.ToString()</td>
                    <td>@objUser.peso</td>
                </tr>
            }
        </tbody>
    </table>
    Dimensões: @Html.TextBox("qtd", (Model.name))   Peso: @Html.TextBox("partida", (Model.name))      <button type="submit" class="btn btn-success" asp-route-data="foo" asp-page-handler="Way5">Incluir</button> <br />
    classe: @Html.DropDownList("go", Model.classe)<br />
    asento: @Html.DropDownList("goo", Model.assento)<br />
    <button type="submit" class="btn btn-success" asp-route-data="foo" asp-page-handler="Way2">cadastrar</button>
    <button type="submit" class="btn btn-warning" asp-route-data="foo" asp-page-handler="Way3">alterar</button>
    <button type="submit" class="btn btn-light" asp-route-data="foo" asp-page-handler="Way4">cancelar</button>
</form>
<br />
<br />
<table id="tb_view">
    <thead>
        <tr><th></th><th>id</th><th>nome</th><th>assento</th></tr>
    </thead>
    <tbody>
        @foreach (Dominio.Check_in objUser in Model.GetRoles2())
        {
            <tr>
                <td>
                    <a class="btn btn-primary" href='check_in?cod=@objUser.ID.ToString()'>editar</a>
                    <a class="btn btn-danger" href='check_in?del=@objUser.ID.ToString()'>apagar</a>
                </td>
                <td>@objUser.ID.ToString()</td>
                <td>@objUser.Passagem.ID</td>
                <td>@objUser.Entrada.ID</td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    function myFunction(item, index) {
        if (item.id == korn) {
            korn = item.class_id;
            metallica = item.pass_id;
            return;
        }
    }
    class bilhete {
        constructor(id, class_id,pass_id) {
            this.id = id;
            this.class_id = class_id;
            this.pass_id = pass_id;
        }
    }
    var adidas = new Array();
    var korn = 0;
    var metallica = 0;
    function go() {
        $('#voo').children('option:not(:first)').remove();
        $.ajax({
            type: "GET",
            url: '/api/devil/voo/' + korn,
            timeout: 30000,
            contentType: "application/json; charset=utf-8",
            cache: false,
            success: function (devil) {
                var ii = 1;
                $.each(JSON.parse(devil), function (i, cliente) {

                    $("#voo").append(new Option(cliente.LO_chegada.Nome + " " + cliente.DT_partida, cliente.ID.toString()));
                    var o = 10;
                    var a = (Math.round(lat * o) / o);
                    var b = (Math.round(cliente.lat * o) / o);
                    if (a == b) {
                        //alert(ii);
                        //$("#aeroporto").selectedIndex = i;
                        $("#voo").prop('selectedIndex', ii);
                    }
                    ii++;
                });
            }
        });
    }

    function gohell() {
        $('#bilhete').children('option:not(:first)').remove();
        $.ajax({
            type: "GET",
            url: '/api/devil/bilhete/' + korn,
            timeout: 30000,
            contentType: "application/json; charset=utf-8",
            cache: false,
            error: function () {
                console.log("erro");
            },
            success: function (devil) {
                //var ii = 1;
                console.log(" asdfasdfasdfasdf");
                //alert('a');
                adidas = [];
                $.each(JSON.parse(devil), function (i, cliente) {

                    $("#bilhete").append(new Option(cliente.Nome + " " + cliente.RG, cliente.ID.toString()));
                    //alert(cliente.passagem.Tipo.ID);
                    adidas.push(new bilhete(cliente.ID, cliente.passagem.Tipo.ID, cliente.passagem.Voo.ID));
                });
            }
        });
    }

    function under_pressure(boerap, another ) {
        $('#bilhete').children('option:not(:first)').remove();
        $.ajax({
            type: "GET",
            url: '/api/devil/bilhete/' + boerap + '/' + another,
            timeout: 30000,
            contentType: "application/json; charset=utf-8",
            cache: false,
            error: function () {
                console.log("erro");
            },
            success: function (devil) {
                console.log(" asdfasdfasdfasdf");
                adidas = [];
                $.each(JSON.parse(devil), function (i, cliente)
                {
                    $("#bilhete").append(new Option(cliente.Nome + " | ID=" + cliente.ID, cliente.ID.toString()));
                    adidas.push(new bilhete(cliente.ID, cliente.passagem.Tipo.ID, cliente.passagem.Voo.ID));
                });
            }
        });
    }

    function override() {
        $('#goo').children('option:not(:first)').remove();
        $.ajax({
            type: "GET",
            url: '/api/devil/assento/' + metallica + '/' + korn ,
            timeout: 30000,
            contentType: "application/json; charset=utf-8",
            cache: false,
            error: function () {
                console.log("erro");
            },
            success: function (devil) {
                //var ii = 1;
                console.log(" asdfasdfasdfasdf");
                //alert('a')
                $.each(JSON.parse(devil), function (i, cliente) {

                    $("#goo").append(new Option(cliente.Tag, cliente.ID.toString()));

                });
            }
        });
    }
    $("#aeroporto").append(new Option('Selecione aeroporto:', 0));
    $("#voo").append(new Option('Selecione voo:', 0));
    $("#bilhete").append(new Option('Selecione bilhete:', 0));
    $("#goo").append(new Option('Selecione assento:', 0));
    var lat = 0.5;
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
        }
    }
    function showPosition(position) {
        var latlon = position.coords.latitude + "," + position.coords.longitude;
        lat = position.coords.latitude;
    }
    function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                x.innerHTML = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                x.innerHTML = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                x.innerHTML = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                x.innerHTML = "An unknown error occurred."
                break;
        }
    }
    getLocation();
    $.ajax({
        type: "GET",
        url: '/api/devil/aeroporto?cod=0',
        timeout: 30000,
        contentType: "application/json; charset=utf-8",
        cache: false,
        success: function (devil) {
            var ii = 0;
            $.each(JSON.parse(devil), function (i, cliente) {

                $("#aeroporto").append(new Option(cliente.Nome, cliente.ID.toString()));
                var o = 10;
                var a = (Math.round(lat * o) / o);
                var b = (Math.round(cliente.lat * o) / o);
                if (a == b) {
                    //alert(ii);
                    //$("#aeroporto").selectedIndex = i;
                    $("#aeroporto").prop('selectedIndex', ii);
                    korn = ii;
                }
                ii++;
            });
            go();
        }
    });



    $(document).ready(function () {
        $('#tb_vieww').DataTable({ searching: false, paging: false, info: false, ordering: false });
        $('#tb_view').DataTable();
        $('#hr_destino').mask('000.000.000-00');
        $('#hr_partida').mask('00.000.000-0');
        $("#aeroporto").change(function (e) {
            korn = $("#aeroporto").find(":selected").val();
            return go();
        });
        $("#voo").change(function (e) {
            korn = $("#voo").find(":selected").val();
            console.log("asdfasdf");
            return gohell();
        });

        $("#bilhete").change(function (e) {
            korn = $("#bilhete").find(":selected").val();
            adidas.forEach(myFunction);
            $("#go").prop('selectedIndex', korn - 1);
            $("#go").prop('disabled', true);
            //metallica = $("#voo").find(":selected").val();
            return override();
        });
    });
</script>
<div id="table">
</div>